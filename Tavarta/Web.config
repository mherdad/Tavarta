<?xml version="1.0"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=301880
  -->
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <sectionGroup name="nwebsec">
      <!-- For information on how to configure NWebsec please visit: https://docs.nwebsec.com/ -->
      <section name="httpHeaderSecurityModule" type="NWebsec.Modules.Configuration.HttpHeaderSecurityConfigurationSection, NWebsec, Version=4.2.0.0, Culture=neutral, PublicKeyToken=3613da5f958908a1" requirePermission="false"/>
    </sectionGroup>
    <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah"/>
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah"/>
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah"/>
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah"/>
    </sectionGroup>
  </configSections>
  <entityFramework>
    <interceptors>
      <interceptor type="DNTProfiler.EntityFramework.Core.DatabaseLogger, DNTProfiler.EntityFramework.Core">
        <parameters>
          <parameter value="http://localhost:8080"/>
          <parameter value="|DataDirectory|\ErrorsLog.Log"/>
        </parameters>
      </interceptor>
    </interceptors>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb"/>
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer"/>
    </providers>
  </entityFramework>
  <appSettings>
    <add key="MetaTitle" value="سایت خبری و تحلیلی "/>
    <add key="MetaDescription" value="اخبار استان  و ایران"/>
    <add key="MetaKeywords" value="اخبار, "/>
    <add key="webpages:Version" value="3.0.0.0"/>
    <add key="webpages:Enabled" value="false"/>
    <add key="ClientValidationEnabled" value="true"/>
    <add key="EncryptionKey" value="fslkdfjslf ffdsfdsfldskfjsdlk inewlfidsfsdk dssdofsdfdiso"/>
    <add key="EncryptionPrefix" value="Hidden"/>
    <add key="UnobtrusiveJavaScriptEnabled" value="true"/>
    <add key="elmah.mvc.disableHandler" value="false"/>
    <add key="elmah.mvc.disableHandleErrorFilter" value="false"/>
    <add key="elmah.mvc.requiresAuthentication" value="false"/>
    <add key="elmah.mvc.IgnoreDefaultRoute" value="false"/>
    <add key="elmah.mvc.allowedRoles" value="*"/>
    <add key="elmah.mvc.allowedUsers" value="*"/>
    <add key="elmah.mvc.route" value="elmah"/>
    <add key="elmah.mvc.UserAuthCaseSensitive" value="true"/>
  </appSettings>
  <system.web>
    <!--outputCache profiles-->
    <caching>
      <outputCacheSettings>
        <outputCacheProfiles>
          <!-- Cache the 400 Bad Request route for a day. -->
          <add name="BadRequest" duration="86400" location="Any" varyByParam="none"/>
          <!-- Cache the 403 Forbidden route for a day. -->
          <add name="Forbidden" duration="86400" location="Any" varyByParam="none"/>
          <!-- Cache the 405 Method Not Allowed route for a day. -->
          <add name="MethodNotAllowed" duration="86400" location="Any" varyByParam="none"/>
          <!-- Cache the 404 Not Found route for a day. -->
          <add name="NotFound" duration="86400" location="Any" varyByParam="none"/>
          <!-- Cache the 401 Unauthorized route for a day. -->
          <add name="Unauthorized" duration="86400" location="Any" varyByParam="none"/>
          <!-- Cache the 500 Internal Server Error route for a day. -->
          <add name="InternalServerError" duration="86400" location="Any" varyByParam="none"/>
        </outputCacheProfiles>
      </outputCacheSettings>
    </caching>
    <httpRuntime requestValidationMode="2.0" targetFramework="4.5.2" enableVersionHeader="false" maxUrlLength="260" maxQueryStringLength="2048" maxRequestLength="2097151" executionTimeout="1200"/>
    <compilation debug="true" targetFramework="4.5.2" enablePrefetchOptimization="true">
      <assemblies>
        <add assembly="System.IO.Compression.FileSystem, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
      </assemblies>
    </compilation>
    <httpCookies httpOnlyCookies="true" requireSSL="false"/>
    <trace enabled="true" mostRecent="true" localOnly="true"/>
    <pages buffer="true" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
    <httpModules>
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah"/>
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah"/>
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah"/>
    </httpModules>
    <sessionState mode="Off"/>
    <customErrors mode="Off"/>
  </system.web>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-8.0.0.0" newVersion="8.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.AspNet.SignalR.Core" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-2.2.0.0" newVersion="2.2.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.Cookies" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.OAuth" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:6 /nowarn:1659;1699;1701"/>
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:14 /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+"/>
    </compilers>
  </system.codedom>
  <!--Entity framework providers-->
  <connectionStrings>
    <clear/>
    <add name="DefaultConnection" connectionString="Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=C:\Users\Live\documents\visual studio 2015\Projects\Tavarta\Tavarta\App_Data\TavartaData.mdf;Integrated Security=True;MultipleActiveResultSets=True;" providerName="System.Data.SqlClient"/>
  </connectionStrings>
  <!--<customErrors mode="RemoteOnly" redirectMode="ResponseRewrite" defaultRedirect="~/500.aspx">
  <error statusCode="404" redirect="~/error/notFound" />
  <error statusCode="500" redirect="~/500.aspx" />
</customErrors>-->
  <system.webServer>
    <httpCompression directory="%SystemDrive%\inetpub\temp\IIS Temporary Compressed Files" minFileSizeForComp="1024">
      <scheme name="gzip" dll="%Windir%\system32\inetsrv\gzip.dll"/>
      <dynamicTypes>
        <add mimeType="text/*" enabled="true"/>
        <add mimeType="message/*" enabled="true"/>
        <add mimeType="application/x-javascript" enabled="true"/>
        <!-- Compress XML files -->
        <add mimeType="application/xml" enabled="true"/>
        <!-- Compress JavaScript files -->
        <add mimeType="application/javascript" enabled="true"/>
        <!-- Compress JSON files -->
        <add mimeType="application/json" enabled="true"/>
        <!-- Compress SVG files -->
        <add mimeType="image/svg+xml" enabled="true"/>
        <!-- Compress RSS feeds -->
        <add mimeType="application/rss+xml" enabled="true"/>
        <!-- Compress Atom feeds -->
        <add mimeType="application/atom+xml" enabled="true"/>
        <add mimeType="*/*" enabled="false"/>
      </dynamicTypes>
      <staticTypes>
        <add mimeType="text/*" enabled="true"/>
        <add mimeType="message/*" enabled="true"/>
        <add mimeType="application/x-javascript" enabled="true"/>
        <add mimeType="application/atom+xml" enabled="true"/>
        <add mimeType="application/xaml+xml" enabled="true"/>
        <!-- Compress ICO icon files (Note that most .ico files are uncompressed but there are some that can contain PNG compressed images. If you are doing this, remove this line). -->
        <add mimeType="image/x-icon" enabled="true"/>
        <!-- Compress XML files -->
        <add mimeType="application/xml" enabled="true"/>
        <add mimeType="application/xml; charset=UTF-8" enabled="true"/>
        <!-- Compress JavaScript files -->
        <add mimeType="application/javascript" enabled="true"/>
        <!-- Compress JSON files -->
        <add mimeType="application/json" enabled="true"/>
        <!-- Compress SVG files -->
        <add mimeType="image/svg+xml" enabled="true"/>
        <!-- Compress EOT font files -->
        <add mimeType="application/vnd.ms-fontobject" enabled="true"/>
        <!-- Compress TTF font files - application/font-ttf will probably be the new correct MIME type. IIS still uses application/x-font-ttf. -->
        <!--<add mimeType="application/font-ttf" enabled="true" />-->
        <add mimeType="application/x-font-ttf" enabled="true"/>
        <!-- Compress OTF font files - application/font-opentype will probably be the new correct MIME type. IIS still uses font/otf. -->
        <!--<add mimeType="application/font-opentype" enabled="true" />-->
        <add mimeType="font/otf" enabled="true"/>
        <!-- Compress RSS feeds -->
        <add mimeType="application/rss+xml" enabled="true"/>
        <add mimeType="application/rss+xml; charset=UTF-8" enabled="true"/>
        <add mimeType="*/*" enabled="false"/>
      </staticTypes>
    </httpCompression>
    <urlCompression doDynamicCompression="true" doStaticCompression="true"  />
    <handlers>
      <remove name="SimpleHandlerFactory-ISAPI-2.0"/>
      <add name="RobotsText" path="robots.txt" verb="GET" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0"/>
      <add name="SimpleHandlerFactory-ISAPI-2.0" path="asp_net/main.ashx" verb="GET,HEAD,POST,DEBUG" modules="IsapiModule" scriptProcessor="C:\Windows\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv2.0,bitness32" responseBufferLimit="0"/>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0"/>
      <remove name="OPTIONSVerbHandler"/>
      <remove name="TRACEVerbHandler"/>
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0"/>
    </handlers>
    <defaultDocument enabled="false"/>
    <staticContent>
      <remove fileExtension=".js"/>
      <remove fileExtension=".css"/>
      <mimeMap fileExtension=".webp" mimeType="image/webp"/>
      <mimeMap fileExtension=".js" mimeType="text/javascript"/>
      <mimeMap fileExtension=".css" mimeType="text/css"/>
      <remove fileExtension=".js"/>
      <mimeMap fileExtension=".js" mimeType="application/javascript"/>
      <!-- .json - IIS does not have a JSON MIME type by default. -->
      <remove fileExtension=".json"/>
      <mimeMap fileExtension=".json" mimeType="application/json"/>
      <!-- .rss - IIS does not have a RSS MIME type by default. Add the optional charset to the RSS MIME type. See http://www.rssboard.org/rss-mime-type-application.txt. -->
      <remove fileExtension=".rss"/>
      <mimeMap fileExtension=".rss" mimeType="application/rss+xml; charset=UTF-8"/>
      <!-- .html - Add the optional charset to the HTML MIME type. -->
      <remove fileExtension=".html"/>
      <mimeMap fileExtension=".html" mimeType="text/html; charset=UTF-8"/>
      <!-- .xml - Add the optional charset to the XML MIME type. -->
      <remove fileExtension=".xml"/>
      <mimeMap fileExtension=".xml" mimeType="application/xml; charset=UTF-8"/>
      <!-- HTML5 Video - IIS 7.5 and below does not have these MIME types by default. -->
      <remove fileExtension=".mp4"/>
      <mimeMap fileExtension=".mp4" mimeType="video/mp4"/>
      <remove fileExtension=".m4v"/>
      <mimeMap fileExtension=".m4v" mimeType="video/m4v"/>
      <remove fileExtension=".ogg"/>
      <mimeMap fileExtension=".ogg" mimeType="video/ogg"/>
      <remove fileExtension=".ogv"/>
      <mimeMap fileExtension=".ogv" mimeType="video/ogg"/>
      <remove fileExtension=".webm"/>
      <mimeMap fileExtension=".webm" mimeType="video/webm"/>
      <!-- HTML5 Audio - IIS 7.5 and below does not have these MIME types by default. -->
      <remove fileExtension=".oga"/>
      <mimeMap fileExtension=".oga" mimeType="audio/ogg"/>
      <remove fileExtension=".spx"/>
      <mimeMap fileExtension=".spx" mimeType="audio/ogg"/>
      <!-- .svgz - IIS 7.5 does not have a compressed SVG MIME type by default. -->
      <remove fileExtension=".svgz"/>
      <mimeMap fileExtension=".svgz" mimeType="image/svg+xml"/>
      <!-- Web Fonts -->
      <!-- .eot - Served as application/octet-stream. Use the correct MIME type of application/vnd.ms-fontobject. -->
      <remove fileExtension=".eot"/>
      <mimeMap fileExtension=".eot" mimeType="application/vnd.ms-fontobject"/>
      <!-- .ttf - Served as application/octet-stream. Use the correct MIME type of application/application/x-font-ttf. -->
      <remove fileExtension=".ttf"/>
      <mimeMap fileExtension=".ttf" mimeType="application/x-font-ttf"/>
      <!-- .ttc - IIS does not have a TTC MIME type by default. -->
      <remove fileExtension=".ttc"/>
      <mimeMap fileExtension=".ttc" mimeType="application/x-font-ttf"/>
      <!-- .otf - IIS does not have a OTF MIME type by default. -->
      <remove fileExtension=".otf"/>
      <mimeMap fileExtension=".otf" mimeType="font/otf"/>
      <!-- .woff - Served as font/woff. Use the correct MIME type of application/font-woff. -->
      <remove fileExtension=".woff"/>
      <mimeMap fileExtension=".woff" mimeType="application/font-woff"/>
      <!-- .woff2 - IIS does not have a WOFF2 MIME type by default. -->
      <remove fileExtension=".woff2"/>
      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2"/>
      <!-- .webp - IIS does not have a WEBP MIME type by default. -->
      <remove fileExtension=".webp"/>
      <mimeMap fileExtension=".webp" mimeType="image/webp"/>
      <!-- .appcache - IIS does not have a appcache MIME type by default. -->
      <remove fileExtension=".appcache"/>
      <mimeMap fileExtension=".appcache" mimeType="text/cache-manifest"/>
      <!-- .manifest - IIS does not have a manifest MIME type by default. -->
      <remove fileExtension=".manifest"/>
      <mimeMap fileExtension=".manifest" mimeType="text/cache-manifest"/>
      <clientCache cacheControlCustom="public" cacheControlMode="UseMaxAge" cacheControlMaxAge="365.00:00:00" setEtag="false"/>
      <mimeMap fileExtension="json" mimeType="application/json"/>
    </staticContent>
    <httpErrors errorMode="Custom" existingResponse="PassThrough">
      <!-- Redirect IIS 400 Bad Request responses to the error controllers bad request action. -->
      <remove statusCode="400"/>
      <error statusCode="400" responseMode="ExecuteURL" path="/error/badrequest/"/>
      <!-- Redirect IIS 401 Unauthorized responses to the error controllers unauthorized action. -->
      <!--
      <remove statusCode="401" />
      <error statusCode="401" responseMode="ExecuteURL" path="/error/unauthorized/" />
      <remove statusCode="403" />
      -->
      <!-- Redirect IIS 403.14 Forbidden responses to the error controllers not found action.
           A 403.14 happens when navigating to an empty folder like /Content and directory browsing is turned off
           See http://www.troyhunt.com/2014/09/solving-tyranny-of-http-403-responses.html -->
      <error statusCode="403" subStatusCode="14" responseMode="ExecuteURL" path="/error/notfound/"/>
      <!-- Redirect IIS 403.501 and 403.502 Forbidden responses to a static Forbidden page.
           This happens when someone tries to carry out a Denial of Service (DoS) attack on your site.
           See http://www.iis.net/learn/get-started/whats-new-in-iis-8/iis-80-dynamic-ip-address-restrictions -->
      <!--
      <error statusCode="403" subStatusCode="501" responseMode="File" path="error\forbidden.html" />
      <error statusCode="403" subStatusCode="502" responseMode="File" path="error\forbidden.html" />
      -->
      <!-- Redirect IIS 403 Forbidden responses to the error controllers forbidden action. -->
      <!--
      <error statusCode="403" responseMode="ExecuteURL" path="/error/forbidden/" />
      -->
      <!-- Redirect IIS 404 Not Found responses to the error controllers not found action. -->
      <remove statusCode="404"/>
      <error statusCode="404" responseMode="ExecuteURL" path="/error/notfound/"/>
      <!-- Redirect IIS 405 Method Not Allowed responses to the error controllers method not allowed action. -->
      <!--
      <remove statusCode="405" />
      <error statusCode="405" responseMode="ExecuteURL" path="/error/methodnotallowed/" />
      <remove statusCode="500" />
      -->
      <!-- Redirect IIS 500.13 Internal Server Error responses to a static Service Unavailable page.
           A 500.13 occurs because the web server is too busy. The amount of traffic exceeds the Web site's configured capacity. -->
      <!--
      <error statusCode="500" subStatusCode="13" responseMode="File" path="error\serviceunavailable.html" />
      -->
      <!-- Redirect IIS 500 Internal Server Error responses to the error controllers internal server error action. -->
      <!--
      <error statusCode="500" responseMode="ExecuteURL" path="/error/internalservererror/" />
      -->
      <!-- Redirect IIS 503 Service Unavailable responses to a static Service Unavailable page. -->
      <!--
      <remove statusCode="503" />
      <error statusCode="503" responseMode="File" path="error\serviceunavailable.html" />
      -->
      <!-- Redirect IIS 504 Gateway Timeout responses to a static Gateway Timeout page. -->
      <!--
      <remove statusCode="504" />
      <error statusCode="504" responseMode="File" path="error\gatewaytimeout.html" />-->
    </httpErrors>
    <modules runAllManagedModulesForAllRequests="false">
      <remove name="WebDAVModule"/>
      <remove name="Session"/>
      <remove name="FormsAuthentication"/>
      <remove name="WindowsAuthentication"/>
      <remove name="PassportAuthentication"/>
      <remove name="RoleManager"/>
      <remove name="AnonymousIdentification"/>
      <remove name="Profile"/>
      <add name="NWebsecHttpHeaderSecurityModule" type="NWebsec.Modules.HttpHeaderSecurityModule, NWebsec, Version=4.2.0.0, Culture=neutral, PublicKeyToken=3613da5f958908a1"/>
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler"/>
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" preCondition="managedHandler"/>
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" preCondition="managedHandler"/>
    </modules>
    <httpProtocol>
      <customHeaders>
        <clear/>
        <!-- X-UA-Compatible - Ensure that IE and Chrome frame is using the latest rendering mode. Alternatively, use the HTML meta tag X-UA-Compatible "IE=edge" -->
        <add name="X-UA-Compatible" value="IE=edge,chrome=1"/>
      </customHeaders>
    </httpProtocol>
    <security>
      <!-- enableProxyMode - Set this to true if you are behind a proxy. -->
      <dynamicIpSecurity enableLoggingOnlyMode="true">
        <!-- maxConcurrentRequests - The number of concurrent HTTP connection requests from a client that will result in the client being blocked. -->
        <denyByConcurrentRequests enabled="true" maxConcurrentRequests="20"/>
        <!-- maxRequests - The number of requests received from a specific client over a specified period of time that will result in the client being blocked (if the check is enabled). -->
        <!-- requestIntervalInMilliseconds - The period of time (in milliseconds) that is used to determine the request rate for a specific client. This rate is used to determine whether the receive rate exceeds that the maximum specified, resulting in the client being blocked (if the check is enabled). -->
        <denyByRequestRate enabled="true" maxRequests="30" requestIntervalInMilliseconds="300"/>
      </dynamicIpSecurity>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="4294967295" maxQueryString="2048" maxUrl="4096"/>
        <hiddenSegments>
          <add segment="NWebsecConfig"/>
        </hiddenSegments>
      </requestFiltering>
    </security>
    <validation validateIntegratedModeConfiguration="false"/>
  </system.webServer>
  <nwebsec>
    <httpHeaderSecurityModule xsi:noNamespaceSchemaLocation="NWebsecConfig/HttpHeaderSecurityModuleConfig.xsd" xmlns="http://nwebsec.com/HttpHeaderSecurityModuleConfig.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </nwebsec>
  <elmah/>
</configuration>